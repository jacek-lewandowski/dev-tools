#!/bin/bash

set -o pipefail
set -e

input_file="$1"
output_file="$2"

if [[ -z "${input_file}" || -z "${output_file}" ]]; then
    echo "Usage: [VIDEO_BITRATE=...] [AUDIO_BITRATE=...] $0 <input_file> <output_file>" >&2
    exit 1
fi

video_bitrate="${VIDEO_BITRATE:-5000k}"
audio_bitrate="${AUDIO_BITRATE:-128k}"

if [ ! -f "${input_file}" ]; then
    echo "File not found: ${input_file}" >&2
    exit 1
fi

ffmpeg -y -hide_banner -loglevel error -i "${input_file}" -c:v libx264 -b:v "${video_bitrate}" -pass 1 -c:a copy -vf mpdecimate -vsync vfr -f null /dev/null < /dev/null && \
ffmpeg -y -hide_banner -loglevel error -i "${input_file}" -movflags use_metadata_tags -c:v libx264 -b:v "${video_bitrate}" -pass 2 -acodec aac -b:a "${audio_bitrate}" -vf mpdecimate -vsync vfr "${output_file}" < /dev/null | tee "${output_file}.log"

res=$?

mv -f ffmpeg2pass-0.log "${input_file}.ffmpeg2pass-0.log"
mv -f ffmpeg2pass-0.log.mbtree "${input_file}.ffmpeg2pass-0.log.mbtree"

if [[ "$res" != "0" ]]; then
    echo "${input_file} failed" >> failed.txt
    rm -f "${output_file}"
    exit 1
fi
